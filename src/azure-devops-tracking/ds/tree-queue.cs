////////////////////////////////////////////////////////////////////////////////
//
// Module: tree-queue.cs
//
//
////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Threading;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev27 {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

public class TreeQueue<T>
{
    ////////////////////////////////////////////////////////////////////////////
    // Constructor
    ////////////////////////////////////////////////////////////////////////////

    public TreeQueue(int maxLeafSize = 500)
    {
        AverageMsBetweenInserts = 0;
        AverageMsBetweenRemoval = 0;
        MaxLeafQueueSize = maxLeafSize;
        
        EnqueueQueue = new T[MaxLeafQueueSize];
        DequeueQueue = new T[MaxLeafQueueSize];

        TransportQueue = new List<T>();
    }

    ////////////////////////////////////////////////////////////////////////////
    // Member variables
    ////////////////////////////////////////////////////////////////////////////

    public long AverageMsBetweenInserts { get; set; }
    public long AverageMsBetweenRemoval { get; set; }
    public int MaxLeafQueueSize { get; set; }
    public T[] EnqueueQueue { get; set; }
    public T[] DequeueQueue { get; set; }
    public List<T> TransportQueue { get; set; }

    ////////////////////////////////////////////////////////////////////////////
    // Member methods
    ////////////////////////////////////////////////////////////////////////////

    public void Enqueue(T item)
    {
        _Enqueue(item);
    }

    public T Dequeue()
    {
        return _Dequeue();
    }

    public bool TryEnqueue(T item)
    {
        bool success = false;

        
    }

    public T TreDequeue()
    {

    }

    ////////////////////////////////////////////////////////////////////////////
    // Helper methods
    ////////////////////////////////////////////////////////////////////////////

    private void _Enqueue(T item)
    {

    }

    private T _Dequeue()
    {

    }
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // end of namespace(ev27)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////